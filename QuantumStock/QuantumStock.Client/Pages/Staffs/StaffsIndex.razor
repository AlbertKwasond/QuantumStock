@page "/users"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))


<PageTitle>Users List</PageTitle>


<h3>Manage your Users </h3>

@if (staffList.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Full Name</th>
                <th>Date Of Birth</th>
                <th>Gender</th>
                <th>Mobile Number</th>
                <th>Email</th>
                <th>Address</th>
                <th>Roles</th>
                <th>Branch</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in staffList)
            {
                <tr>
                    <td>@item.FullName</td>
                    <td>@item.DOB</td>
                    <td>@item.Gender</td>
                    <td>@item.MobileNumber</td>
                    <td>@item.Email</td>
                    <td>@item.Address</td>
                    <td>@item.Roles</td>
                    <td>@item.Branch.Name</td>
                    <td>
                        <a href="/staffsform/@item.Id" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(item.Id)">Delete</button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
<button class="btn btn-primary" @onclick="AddStaff">Add User</button>

@code {
    List<Staff> staffList = new List<Staff>();

    protected override async Task OnInitializedAsync()
    {
        await LoadAuthor();
    }

    void AddStaff()
    {
        NavigationManager.NavigateTo("staffsform");
    }

    void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"edit-staffs/{id}");
    }

    async Task LoadAuthor()
    {
        await Task.Delay(100);

        var result = await Http.GetFromJsonAsync<List<Staff>>("api/staffs");
        if (result is not null)
            staffList = result;
    }

    async Task DeleteProduct(int id)
    {
        await Http.DeleteAsync($"api/staffs/{id}");
        await LoadAuthor();
    }
}
