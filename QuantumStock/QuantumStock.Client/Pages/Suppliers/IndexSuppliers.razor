@page "/supplier"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Supplier list</PageTitle>
<div class="row">
    <div class="col-lg-12">
        <div class="card" id="orderList">
            <div class="card-header border-0">
                <div class="row align-items-center gy-3">
                    <div class="col-sm">
                        <h5 class="card-title mb-0">Expenses</h5>
                    </div>

                </div>
            </div>


            <div class="card-body pt-0">
                <div>
                    <div class="table-responsive table-card mb-1">
                        @if (suppliersList.Count == 0)
                        {
                            <div class="col-sm-auto">
                                <div class="d-flex gap-1 flex-wrap">
                                    <button class="btn btn-primary" @onclick="AddExpenses">Create Expenses</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-auto">
                                <div class="d-flex gap-1 flex-wrap">
                                    <button class="btn btn-success" @onclick="AddExpenses">Create Expenses</button>

                                </div>
                            </div>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Supplier Name</th>
                                        <th>Address</th>
                                        <th>City</th>
                                        <th>Country</th>
                                        <th>Phone Number</th>
                                        <th>Email</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in suppliersList)
                                    {
                                        <tr>
                                            <td>@item.Name</td>
                                            <td>@item.Address</td>
                                            <td>@item.City</td>
                                            <td>@item.Country</td>
                                            <td>@item.PhoneNumber</td>
                                            <td>@item.Email</td>
                                            <td>
                                                <button class="btn btn-primary" @onclick="@(() => EditSupplier(@item.Id))">Edit</button>
                                                <button class="btn btn-danger" @onclick="() => DeleteSupplier(item.Id)">Delete</button>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    List<Supplier> suppliersList = new List<Supplier>();

    protected override async Task OnInitializedAsync()
    {
        await LoadAuthor();
    }

    void AddExpenses()
    {
        NavigationManager.NavigateTo("supplierform");
    }

    void EditSupplier(int Id)
    {
        NavigationManager.NavigateTo($"edit-supplier/{Id}");
    }

    async Task LoadAuthor()
    {
        await Task.Delay(100);

        var result = await Http.GetFromJsonAsync<List<Supplier>>("api/suppliers");
        if (result is not null)
            suppliersList = result;
    }

    async Task DeleteSupplier(int Id)
    {
        await Http.DeleteAsync($"api/suppliers/{Id}");
        await LoadAuthor();
    }
}
