@page "/index"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))


<PageTitle>Products list</PageTitle>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title mb-0">Manage your Products</h4>
            </div>
            <div class="card-body">
              
                @if (products.Count == 0)
                {
                    <div class="row g-4 mb-3">
                        <div class="col-sm-auto">
                            <button class="btn btn-success add-btn" @onclick="AddProduct"><i class="ri-add-line align-bottom me-1"></i>Create Products</button>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row g-4 mb-3">
                        <div class="col-sm-auto">
                            <button class="btn btn-success add-btn" @onclick="AddProduct"><i class="ri-add-line align-bottom me-1"></i>Create Products</button>
                        </div>
                    </div>
                    <div class="table-responsive table-card mt-3 mb-1">
                        <table class="table">
                            <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Category</th>
                                <th>Total Qty</th>
                                <th>Cost Price</th>
                                <th>Selling Price</th>
                                <th>Actions</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in products)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Categorys</td>
                                    <td>@item.TotalQty</td>
                                    <td>@item.CostPrice</td>
                                    <td>@item.SellingPrice</td>
                                    <td>
                                        <button class="btn btn-primary" @onclick="@(() => EditProduct(@item.Id))">Edit</button>
                                        <button class="btn btn-danger" @onclick="() => DeleteProduct(item.Id)">Delete</button>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


@code {
    List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await LoadAuthor();
    }

    void AddProduct()
    {
        NavigationManager.NavigateTo("productform");
    }

    void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"edit-productform/{id}");
    }

    async Task LoadAuthor()
    {
        await Task.Delay(100);

        var result = await Http.GetFromJsonAsync<List<Product>>("api/products");
        if (result is not null)
            products = result;
    }

    async Task DeleteProduct(int id)
    {
        await Http.DeleteAsync($"api/products/{id}");
        await LoadAuthor();
    }
}
